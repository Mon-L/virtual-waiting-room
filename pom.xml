<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.zcn</groupId>
    <artifactId>virtual-waiting-room</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>
    <modules>
        <module>virtual-waiting-room-infrastructure</module>
        <module>virtual-waiting-room-domain</module>
        <module>virtual-waiting-room-client</module>
        <module>virtual-waiting-room-app</module>
        <module>virtual-waiting-room-adapter</module>
        <module>boot</module>
    </modules>

    <properties>
        <revision>0.0.1</revision>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
        <spring-boot.version>2.6.14</spring-boot.version>
        <mybatis.version>2.1.2</mybatis.version>
        <pagehelper.version>1.4.6</pagehelper.version>
        <rocketmq.version>2.2.3</rocketmq.version>
        <nimbusds.version>9.21</nimbusds.version>
        <antlr4.version>4.11.1</antlr4.version>
        <xxl.job.version>2.4.0</xxl.job.version>
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
        <redisson.version>2.15.2</redisson.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>cn.zcn</groupId>
                <artifactId>virtual-waiting-room-client</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.zcn</groupId>
                <artifactId>virtual-waiting-room-adapter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.zcn</groupId>
                <artifactId>virtual-waiting-room-app</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.zcn</groupId>
                <artifactId>virtual-waiting-room-infrastructure</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.zcn</groupId>
                <artifactId>virtual-waiting-room-domain</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbusds.version}</version>
            </dependency>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>${antlr4.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl.job.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>2.28.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <java>
                        <importOrder/>
                        <removeUnusedImports/>
                        <formatAnnotations/>
                        <palantirJavaFormat/>
                        <licenseHeader>
                            <file>${user.dir}/HEADER</file>
                        </licenseHeader>
                    </java>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>